/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/oauth/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Get Access Token
         * @description Obtain an OAuth2 access token using client credentials flow. This token is required to authenticate requests to HRP API endpoints.
         */
        post: operations["getAccessToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        HRPAuthRequest: {
            /**
             * @description OAuth2 client identifier provided by HRP
             * @example your_client_id
             */
            client_id: string;
            /**
             * Format: password
             * @description OAuth2 client secret provided by HRP
             * @example your_client_secret
             */
            client_secret: string;
            /**
             * @description The intended audience for the token, typically the HRP API base URL with version
             * @example https://api.hiddenroad.com/v0/
             */
            audience: string;
            /**
             * @description OAuth2 grant type, must be 'client_credentials'
             * @example client_credentials
             * @enum {string}
             */
            grant_type: "client_credentials";
        };
        HRPAuthResponse: {
            /**
             * @description The OAuth2 access token (JWT format)
             * @example eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndTdVpsdUhoa0E0M2M5Mll3WTVRWiJ9...
             */
            access_token: string;
            /**
             * @description The token type, always 'Bearer'
             * @example Bearer
             */
            token_type: string;
            /**
             * @description Token lifetime in seconds
             * @example 6396
             */
            expires_in: number;
            /**
             * @description Space-separated list of granted scopes
             * @example otc:read accountactivity:* atm:read otc:write riskmetrics:* atm:write
             */
            scope?: string;
        };
        ErrorResponse: {
            /**
             * @description Error code identifier
             * @enum {string}
             */
            error: "invalid_request" | "invalid_client" | "invalid_grant" | "unauthorized_client" | "unsupported_grant_type" | "invalid_scope" | "server_error";
            /** @description Human-readable error description */
            error_description?: string;
            /**
             * Format: uri
             * @description URI to documentation about the error (optional)
             */
            error_uri?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getAccessToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                /** @example {
                 *       "client_id": "your_client_id",
                 *       "client_secret": "your_client_secret",
                 *       "audience": "https://api.hiddenroad.com/v0/",
                 *       "grant_type": "client_credentials"
                 *     } */
                "application/json": components["schemas"]["HRPAuthRequest"];
            };
        };
        responses: {
            /** @description Successfully obtained access token */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "access_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndTdVpsdUhoa0E0M2M5Mll3WTVRWiJ9...",
                     *       "scope": "otc:read accountactivity:* atm:read otc:write riskmetrics:* atm:write",
                     *       "expires_in": 6396,
                     *       "token_type": "Bearer"
                     *     } */
                    "application/json": components["schemas"]["HRPAuthResponse"];
                };
            };
            /** @description Bad Request - Invalid request parameters */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "error": "invalid_request",
                     *       "error_description": "Missing required parameter: client_id"
                     *     } */
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Unauthorized - Invalid client credentials */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "error": "invalid_client",
                     *       "error_description": "Invalid client credentials"
                     *     } */
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "error": "server_error",
                     *       "error_description": "Internal server error occurred"
                     *     } */
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
